{"ast":null,"code":"var _jsxFileName = \"E:\\\\Computer science\\\\React\\\\my-app\\\\src\\\\Components\\\\TextForm.js\";\nimport React, { useState } from \"react\";\nexport default function TextForm(props) {\n  // function handleUpClick(){\n  //     console.log(\"Uppercase was clicked\")\n  // }\n  const [text, setText] = useState(\"\");\n\n  const handleUpClick = () => {\n    console.log(\"Uppercase was clicked\");\n    let newTxt = text.toUpperCase();\n    setText(newTxt);\n    props.showAlert(\"Converted to uppercase\", \"success\");\n  };\n\n  const handleOnChange = event => {\n    console.log(\"on change\");\n    setText(event.target.value);\n  };\n\n  const handleDownClick = () => {\n    setText(text.toLowerCase());\n    props.showAlert(\"Converted to lowercase\", \"success\");\n  };\n\n  const wordCount = () => {\n    let count = 0;\n    let a = text.split(' ');\n    a.forEach(function (element) {\n      if (element !== '') {\n        count++;\n      }\n    });\n    return count;\n  };\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"Text has been copied\", \"success\");\n  };\n\n  const handleExtraSpace = () => {\n    console.log(\"hello\");\n    let newtxt = text.split(/[ ]+/);\n    setText(newtxt.join(' '));\n  };\n\n  const clear = () => {\n    setText(\"\");\n    props.showAlert(\"Text has been cleared\", \"success\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: props.mode === \"light\" ? \"black\" : \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"my-box\",\n    rows: \"10\",\n    value: text,\n    onChange: handleOnChange,\n    style: {\n      backgroundColor: props.mode === \"light\" ? \"white\" : \"#525252\",\n      color: props.mode === \"light\" ? \"black\" : \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleUpClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Convert to uppercase\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mx-1\",\n    onClick: handleDownClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Convert to lowercase\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \",\n    onClick: handleCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Copy Text\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mx-1\",\n    onClick: handleExtraSpace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Remove extra space\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \",\n    onClick: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Clear\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    style: {\n      color: props.mode === \"light\" ? \"black\" : \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Your text summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, wordCount(), \" words and \", text.length, \" characters\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, text === '' ? \"Preview your text here.\" : text)));\n}","map":{"version":3,"sources":["E:/Computer science/React/my-app/src/Components/TextForm.js"],"names":["React","useState","TextForm","props","text","setText","handleUpClick","console","log","newTxt","toUpperCase","showAlert","handleOnChange","event","target","value","handleDownClick","toLowerCase","wordCount","count","a","split","forEach","element","handleCopy","navigator","clipboard","writeText","handleExtraSpace","newtxt","join","clear","color","mode","heading","backgroundColor","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n    // function handleUpClick(){\r\n    //     console.log(\"Uppercase was clicked\")\r\n    // }\r\n\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const handleUpClick = () => {\r\n        console.log(\"Uppercase was clicked\");\r\n        let newTxt = text.toUpperCase();\r\n        setText(newTxt);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n        \r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleDownClick = () =>{\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n\r\n    const wordCount = () =>{\r\n        let count = 0;\r\n        let a = text.split(' ');\r\n        a.forEach(function(element){\r\n            if(element !== ''){\r\n                count++;\r\n            }\r\n        })\r\n        return count;\r\n    }\r\n\r\n    const handleCopy =() =>{\r\n        navigator.clipboard.writeText(text)\r\n        props.showAlert(\"Text has been copied\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpace =() => {\r\n        console.log(\"hello\")\r\n        let newtxt = text.split(/[ ]+/);\r\n        setText(newtxt.join(' '));\r\n    }\r\n\r\n    const clear = () =>{\r\n        setText(\"\")\r\n        props.showAlert(\"Text has been cleared\", \"success\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\">\r\n                <h1 style={{color: props.mode === \"light\"?\"black\":\"white\"}}>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" id=\"my-box\" rows=\"10\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode===\"light\"?\"white\":\"#525252\", color: props.mode===\"light\"?\"black\":\"white\"}}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleDownClick}>Convert to lowercase</button>\r\n                <button className=\"btn btn-primary \" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpace}>Remove extra space</button>\r\n                <button className=\"btn btn-primary \" onClick={clear}>Clear</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{wordCount()} words and {text.length} characters</p>\r\n                <h2>Preview</h2>\r\n                <p>{text===''?\"Preview your text here.\":text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}